-- 📌 Create Games Tab
local Games = Window:CreateTab("Games", 4483362458)

-- Get current game PlaceId
local placeId = game.PlaceId

-- Supported games list
local supportedGames = {
    [987654321] = "Guts & Blackpowder",
    [13943975949] = "SharkBite 2",
    [123456789] = "Break in 2",
    [71895508397153] = "Die Of Death",
    [81517697608629] = "Pwned by 14:00", 
    [3851622790] = "Break In", 
    [79546208627805] = "99 Nights in the Forest",
    [17382280326] = "RobloxiaUntilDown", --classic
    [80238404781977] = "RobloxiaUntilDown", -- Chaos Mode
    [5096191125] = "Field Trip Z",
    [18687417158] = "Forsaken",
    [99630341423433] = "Biast" 
}

-- 🟦 99 Nights in the Forest
    if placeId == 79546208627805 then
    local ForestTab = Games:CreateSection("99 Nights in the Forest")
    local Button = Games:CreateButton({
   Name = " See all hubs (not mine)",
   Callback = function()
   loadstring(game:HttpGet("https://pastebin.com/raw/GreLQtfN"))()
   end,
})

local Button = Games:CreateButton({
   Name = "Gem farm",
   Callback = function()
   getgenv().WebhookURL = "" --If not used do not write anything
loadstring(game:HttpGet("https://raw.githubusercontent.com/caomod2077/Script/refs/heads/main/Farm%20Diamond%20v2.lua"))()
   end,
})

-- 🟦 Guts & Blackpowder
elseif placeId == 987654321 then
    local Section = Games:CreateSection("Guts & Blackpowder")

    Games:CreateButton({
        Name = "Kill aura (K toggle)",
        Callback = function()
            local SetLag = 9.5
SetLag = math.clamp(SetLag, 0, 10)
local WaitTime = SetLag * 0.4
if SetLag > 10 then WaitTime = 1.5 elseif SetLag <= 1 then WaitTime = 0 end

if _G.CombatSystemRunning then return end
_G.CombatSystemRunning = true

local UserInputService = game:GetService("UserInputService")
local player = game:GetService("Players").LocalPlayer
local RunService = game:GetService("RunService")

local ATTACK_COOLDOWN = 1
local lastAttackTime = 0
local currentMode = 2 -- 1: Stop, 2: Normal, 3: Clear Zombie
local ZOMBIE_TYPES = {"Agent", "Slim"}

local osClock = os.clock
local mathRandom = math.random
local Vector3New = Vector3.new
local ipairs = ipairs

local KillAuraEnabled = false

-- Toggle Kill Aura with K
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.K then
        KillAuraEnabled = not KillAuraEnabled
        warn("🔁 Kill Aura is now: " .. (KillAuraEnabled and "ENABLED" or "DISABLED"))
    end
end)

local function executeAttack()
    if currentMode == 1 then return end
    local currentTime = osClock()
    if currentTime - lastAttackTime < ATTACK_COOLDOWN then return end

    local character = player.Character
    if not character then return end

    local rootPart = character:FindFirstChild("HumanoidRootPart")
    local weapon = character:FindFirstChildWhichIsA("Tool")
    if not (rootPart and weapon) then return end

    local remoteEvent = weapon:FindFirstChildWhichIsA("RemoteEvent")
    if not remoteEvent then
        local meleeBase = weapon:FindFirstChild("MeleeBase")
        if meleeBase then
            remoteEvent = meleeBase:FindFirstChildWhichIsA("RemoteEvent")
        end
    end
    if not remoteEvent then return end

    local rootPos = rootPart.Position
    for _, agent in ipairs(workspace:GetDescendants()) do
        if table.find(ZOMBIE_TYPES, agent.Name) then
            local head = agent:FindFirstChild("Head")
            local humanoid = agent:FindFirstChildOfClass("Humanoid")
            if head and humanoid and humanoid.Health > 0 then
                local dist = (head.Position - rootPos).Magnitude
                if dist <= 19 then
                    local hitPos = head.Position
                    local dir = (hitPos - rootPos).Unit
                    local knockback = dir * 15

                    remoteEvent:FireServer("Swing", "Thrust")
                    remoteEvent:FireServer("HitZombie", agent, hitPos, true, knockback, "Head", Vector3New(mathRandom(), mathRandom(), mathRandom()).Unit)

                    if currentMode == 3 then
                        for i = 1, 4 do
                            task.wait(0.05)
                            remoteEvent:FireServer("Swing", "Thrust")
                            remoteEvent:FireServer("HitZombie", agent, hitPos + Vector3New(0, 0.2 * i, 0), true, knockback * (1 + i * 0.1), "Head", Vector3New(mathRandom(), mathRandom(), mathRandom()).Unit * (1 + i * 0.2))
                        end
                    end
                end
            end
        end
    end

    lastAttackTime = currentTime
end

RunService.Heartbeat:Connect(function()
    task.wait(WaitTime)
    if KillAuraEnabled then
        pcall(executeAttack)
    end
end)

     end,
            
})

    Games:CreateButton({
        Name = "Zombie ESP (T toggle)",
        Callback = function()
            -- ESP Highlight Script (No GUI) with T Toggle

local SetLag = 9.5
SetLag = math.clamp(SetLag, 0, 10)
local WaitTime = SetLag * 0.4
if SetLag > 10 then WaitTime = 1.5 elseif SetLag <= 1 then WaitTime = 0 end

local player = game:GetService("Players").LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local cameraFolder = workspace:WaitForChild("Camera")
local zombieModelName = "m_Zombie"
local ESPEnabled = false

-- Toggle ESP with T
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.T then
        ESPEnabled = not ESPEnabled
        warn("🔁 ESP is now: " .. (ESPEnabled and "ENABLED" or "DISABLED"))
    end
end)

local highlightConfig = {
    Torch = {Color = Color3.fromRGB(100, 255, 100), Transparency = 0.2},
    Axe = {Color = Color3.fromRGB(255, 100, 100), Transparency = 0.2},
    Default = {Color = Color3.fromRGB(240, 240, 240), Transparency = 0.2}
}

local function applyHighlight(model)
    if not model.PrimaryPart then
        model.PrimaryPart = model:FindFirstChildWhichIsA("BasePart") or model:FindFirstChild("HumanoidRootPart")
        if not model.PrimaryPart then return end
    end

    local camera = workspace.CurrentCamera
    local screenPoint = camera:WorldToViewportPoint(model.PrimaryPart.Position)
    if screenPoint.Z <= 0 then return end

    for _, v in ipairs(model:GetDescendants()) do
        if v:IsA("Highlight") and v.Name:sub(1, 4) == "ZHL_" then
            v:Destroy()
        end
    end

    local highlight = Instance.new("Highlight")
    highlight.Name = "ZHL_" .. tostring(math.random(1, 9999))
    highlight.Adornee = model
    highlight.FillTransparency = highlightConfig.Default.Transparency
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop

    if model:FindFirstChild("Torch", true) then
        highlight.FillColor = highlightConfig.Torch.Color
    elseif model:FindFirstChild("Axe", true) then
        highlight.FillColor = highlightConfig.Axe.Color
    else
        highlight.FillColor = highlightConfig.Default.Color
    end

    highlight.Parent = model
end

local function updateHighlights()
    local char = player.Character
    if not char or not char:FindFirstChild("HumanoidRootPart") then return end

    for _, model in ipairs(cameraFolder:GetDescendants()) do
        if model:IsA("Model") and model.Name == zombieModelName and model.PrimaryPart then
            local distance = (char.HumanoidRootPart.Position - model.PrimaryPart.Position).Magnitude
            if distance < 80 then
                applyHighlight(model)
            end
        end
    end
end

RunService.Heartbeat:Connect(function()
    task.wait(WaitTime)
    if ESPEnabled then
        pcall(updateHighlights)
    end
end)
        end,
    })

-- 🟦 SharkBite 2
elseif placeId == 13943975949 then
    local SharkTab = Games:CreateSection("SharkBite 2")

    local player = game.Players.LocalPlayer
    local Players = game:GetService("Players")
    local RunService = game:GetService("RunService")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local character = player.Character or player.CharacterAdded:Wait()
    local backpack = player:WaitForChild("Backpack")
    local hrp = character:WaitForChild("HumanoidRootPart")

    local remote = nil
    local sharkName = nil
    local remotesFolder = ReplicatedStorage:WaitForChild("Projectiles"):WaitForChild("Events"):WaitForChild("Weapons"):WaitForChild("remotes")

    local function hookRemote(remoteObject)
        local mt = getrawmetatable(game)
        setreadonly(mt, false)
        local old = mt.__namecall
        mt.__namecall = newcclosure(function(self, ...)
            local method = getnamecallmethod()
            if self == remoteObject and (method == "FireServer" or method == "InvokeServer") then
                remote = self.Name
            end
            return old(self, ...)
        end)
    end

    for _, r in pairs(remotesFolder:GetChildren()) do
        if r:IsA("RemoteEvent") or r:IsA("RemoteFunction") then
            hookRemote(r)
        end
    end

    remotesFolder.ChildAdded:Connect(function(child)
        if child:IsA("RemoteEvent") or child:IsA("RemoteFunction") then
            hookRemote(child)
        end
    end)

    local function getShark()
        local folder = workspace:FindFirstChild("Sharks")
        if folder then
            for _, shark in pairs(folder:GetChildren()) do
                if shark:IsA("Model") then
                    sharkName = shark.Name
                    return
                end
            end
        end
        sharkName = nil
    end

    local function KillShark()
        for _, tool in pairs(backpack:GetChildren()) do
            if tool:IsA("Tool") then
                tool.Parent = character
            end
        end

        for i = 1, 40 do
            if sharkName and remote then
                local shark = workspace:WaitForChild("Sharks"):FindFirstChild(sharkName)
                local remoteInstance = remotesFolder:FindFirstChild(remote)
                if remoteInstance then
                    remoteInstance:FireServer(shark)
                end
            end
            task.wait()
        end
    end

    local function updateHRP()
        character = player.Character or player.CharacterAdded:Wait()
        backpack = player:WaitForChild("Backpack")
        hrp = character:WaitForChild("HumanoidRootPart")
    end
    player.CharacterAdded:Connect(updateHRP)

    local AutoFarmConn
    SharkTab:CreateToggle({
        Name = "Autofarm (Shoot shark once)",
        CurrentValue = false,
        Callback = function(val)
            if val then
                AutoFarmConn = RunService.Heartbeat:Connect(function(dt)
                    if player.Team and player.Team.Name ~= "Shark" and hrp then
                        if not remote then return end
                        KillShark()
                        getShark()

                        if not sharkName then
                            local chinook = workspace:FindFirstChild("Chinook")
                            if chinook and chinook:FindFirstChild("interior") then
                                hrp.CFrame = chinook.interior.CFrame
                            end
                        else
                            local radius = 1000
                            local speed = math.pi * 2
                            local center = Vector3.new(0, -100, 0)
                            local angle = tick() % (math.pi * 2)
                            local offset = Vector3.new(
                                math.cos(angle) * radius,
                                0,
                                math.sin(angle) * radius
                            )
                            hrp.CFrame = CFrame.new(center + offset, center)
                        end
                    end
                end)
            else
                if AutoFarmConn then
                    AutoFarmConn:Disconnect()
                    AutoFarmConn = nil
                end
            end
        end
    })

    local AutoWinConn
    local function getNearestSurvivor()
        local closest, dist = nil, math.huge
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= player and p.Team and p.Team.Name == "Survivor" then
                local c = p.Character
                local h = c and c:FindFirstChild("Humanoid")
                local pHrp = c and c:FindFirstChild("HumanoidRootPart")
                if h and h.Health > 0 and pHrp then
                    local d = (pHrp.Position - hrp.Position).Magnitude
                    if d < dist then
                        dist = d
                        closest = p
                    end
                end
            end
        end
        return closest
    end

    SharkTab:CreateToggle({
        Name = "Auto Win (as Shark)",
        CurrentValue = false,
        Callback = function(val)
            if val then
                AutoWinConn = RunService.Heartbeat:Connect(function()
                    if player.Team and player.Team.Name == "Shark" then
                        local target = getNearestSurvivor()
                        if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                            local pos = target.Character.HumanoidRootPart.Position
                            for _, s in pairs(workspace:WaitForChild("Sharks"):GetChildren()) do
                                for _, p in pairs(s:GetDescendants()) do
                                    if p:IsA("BasePart") and p.Name == "Ball" then
                                        p.CFrame = CFrame.new(pos)
                                    end
                                end
                            end
                        end
                    end
                end)
            else
                if AutoWinConn then
                    AutoWinConn:Disconnect()
                    AutoWinConn = nil
                end
            end
        end
    })

    local sharkESPConn = {}
    local function toggleSharkESP(enabled)
        local folder = workspace:FindFirstChild("Sharks")
        if not folder then return end
        for _, c in ipairs(sharkESPConn) do c:Disconnect() end
        table.clear(sharkESPConn)
        for _, d in pairs(folder:GetDescendants()) do
            if d:IsA("Highlight") then
                d.Enabled = enabled
                d.OutlineTransparency = enabled and 0 or 1
                table.insert(sharkESPConn, d:GetPropertyChangedSignal("Enabled"):Connect(function()
                    d.Enabled = enabled
                end))
                table.insert(sharkESPConn, d:GetPropertyChangedSignal("OutlineTransparency"):Connect(function()
                    d.OutlineTransparency = enabled and 0 or 1
                end))
            end
        end
    end

    SharkTab:CreateToggle({
        Name = "Highlight Sharks (ESP)",
        CurrentValue = false,
        Callback = function(val)
            toggleSharkESP(val)
        end
    })

    SharkTab:CreateParagraph({
        Title = "Credits",
        Content = "Script by mafuyu (Main)\nSimple Farm by spam77735"
    })
end

-- 🟦 Break In 2
elseif placeId == 123456789 then
    local Section = Games:CreateSection("Break In 2")
    Games:CreateButton({
        Name = "BreaKing Blitz (very OP)",
        Callback = function()
            
loadstring(game:HttpGet("https://raw.githubusercontent.com/RScriptz/RobloxScripts/main/BreakIn2.lua"))()
        end,
    })

-- 🟦 Break In
elseif placeId == 3851622790 then
    local Section = Games:CreateSection("Break In")
    Games:CreateButton({
        Name = "Break In (very OP)",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/TrixAde/Proxima-Hub/main/Main.lua"))()

        end,
    })

-- 🟦 Die of Death
elseif placeId == 71895508397153 then
    local Section = Games:CreateSection("Die Of Death")
    Games:CreateButton({
        Name = "DoD Nexer Hub",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Pro666Pro/Die-Of-Death/refs/heads/main/txt.txt"))()
        end,
    })

        local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local localPlayer = Players.LocalPlayer
local camera = workspace.CurrentCamera

local targetMinMaxHealth = 200
local aimbotEnabled = false
local aimSmoothness = 0.2 -- 0 = instant snap, higher = slower smooth

-- Find closest valid target player (max health >= 200)
local function findClosestTarget()
    local closestPlayer = nil
    local shortestDistance = math.huge
    local localChar = localPlayer.Character
    if not localChar then return nil end
    local localHRP = localChar:FindFirstChild("HumanoidRootPart")
    if not localHRP then return nil end

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("Humanoid") then
            local humanoid = player.Character.Humanoid
            if humanoid.MaxHealth >= targetMinMaxHealth and humanoid.Health > 0 then
                local targetPart = player.Character:FindFirstChild("Head") or player.Character:FindFirstChild("HumanoidRootPart")
                if targetPart then
                    local distance = (targetPart.Position - localHRP.Position).Magnitude
                    if distance < shortestDistance then
                        shortestDistance = distance
                        closestPlayer = player
                    end
                end
            end
        end
    end
    return closestPlayer
end

-- Smoothly aim camera at target position
local function aimAtPosition(targetPos)
    local currentCFrame = camera.CFrame
    local lookVector = (targetPos - currentCFrame.Position).Unit
    local targetCFrame = CFrame.new(currentCFrame.Position, currentCFrame.Position + lookVector)
    camera.CFrame = currentCFrame:Lerp(targetCFrame, aimSmoothness)
end

-- Main aimbot loop
RunService.RenderStepped:Connect(function()
    if aimbotEnabled then
        local targetPlayer = findClosestTarget()
        if targetPlayer and targetPlayer.Character then
            local targetPart = targetPlayer.Character:FindFirstChild("Head") or targetPlayer.Character:FindFirstChild("HumanoidRootPart")
            if targetPart then
                aimAtPosition(targetPart.Position)
            end
        end
    end
end)

-- Rayfield toggle integration example:

local Toggle = Games:CreateToggle({
    Name = "Aimbot Killer",
    CurrentValue = false,
    Flag = "Aimbot200HP",
    Callback = function(value)
        aimbotEnabled = value
    end,
})


-- 🟦 Pwned by 14:00
elseif placeId == 81517697608629 then
    local Section = Games:CreateSection("Pwned by 14:00")
    Games:CreateButton({
        Name = "Inf Stamina",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Minnngocc/PWNED-by-14-00/refs/heads/main/Infinite%20stamina"))()
        end,
    })

-- 🟦 Biast
elseif placeId == 99630341423433 then
    local Section = Games:CreateSection("Biast")

    -- Dropdown example (your item teleporter stuff)
    local player = game.Players.LocalPlayer
    local selectedItem = nil
    local itemsFolder = workspace:FindFirstChild("Items")

    local function scanItems()
        local items = {}
        if itemsFolder then
            for _, obj in pairs(itemsFolder:GetChildren()) do
                if obj:IsA("Model") or obj:IsA("BasePart") then
                    table.insert(items, obj.Name)
                end
            end
        end
        return items
    end

    local Dropdown = Games:CreateDropdown({
        Name = "Select Item",
        Options = scanItems(),
        CurrentOption = {},
        MultipleOptions = false,
        Callback = function(option)
            selectedItem = option[1]
        end,
    })

    Games:CreateButton({
        Name = "Teleport to Item",
        Callback = function()
            if not selectedItem or not itemsFolder then return end
            local obj = itemsFolder:FindFirstChild(selectedItem)
            local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            if obj and hrp then
                if obj:IsA("Model") and obj.PrimaryPart then
                    hrp.CFrame = obj.PrimaryPart.CFrame + Vector3.new(0,3,0)
                elseif obj:IsA("BasePart") then
                    hrp.CFrame = obj.CFrame + Vector3.new(0,3,0)
                end
            end
        end,
    })

    Games:CreateButton({
        Name = "Refresh Item List",
        Callback = function()
            Dropdown:Refresh(scanItems())
        end,
    })

    Games:CreateButton({
        Name = "Inf Stamina",
        Callback = function()
            local char = player.Character or player.CharacterAdded:Wait()
            local stamina = char:FindFirstChild("Stamina")
            if stamina then
                local noCD = stamina:FindFirstChild("NoCooldown")
                if noCD and noCD:IsA("BoolValue") then
                    noCD.Value = true
                end
            end
        end,
    })

        local player = game.Players.LocalPlayer
local camera = workspace.CurrentCamera

local runAimbot = false
local HEALTH_THRESHOLD = 200
local AIM_UPDATE_INTERVAL = 0.1

-- Returns the closest player with MaxHealth > 200
local function getClosestTarget()
    local closest = nil
    local shortestDistance = math.huge

    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character then
            local hrp = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
            local hum = otherPlayer.Character:FindFirstChild("Humanoid")
            if hrp and hum and hum.MaxHealth > HEALTH_THRESHOLD then
                local distance = (player.Character.HumanoidRootPart.Position - hrp.Position).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    closest = hrp
                end
            end
        end
    end

    return closest
end

-- Point camera at the target
local function lookAt(target)
    if not target then return end
    local camPos = camera.CFrame.Position
    local lookVector = (target.Position - camPos).Unit
    camera.CFrame = CFrame.new(camPos, camPos + lookVector)
end

-- Aimbot main loop
local function aimbotLoop()
    while runAimbot do
        local target = getClosestTarget()
        if target then
            lookAt(target)
        end
        task.wait(AIM_UPDATE_INTERVAL)
    end
end

-- ✅ Rayfield Toggle
local AimbotBiast = Games:CreateToggle({
   Name = "Aimbot Killer",
   CurrentValue = false,
   Flag = "AimbotToggle",
   Callback = function(Value)
       runAimbot = Value
       if runAimbot then
           task.spawn(aimbotLoop)
       end
   end,
})

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

-- Settings
local itemsFolder = workspace:FindFirstChild("Items") or workspace
local fallbackPosition = Vector3.new(0, 5, 0)
local itemKeywords = {"teapot", "scroll", "drako"}
local deliveryKeywords = {"delivery", "drop", "submit", "turnin", "goal"}

local pickedItems = {}

-- Simulate key press
local function pressKey(key)
    local vim = game:GetService("VirtualInputManager")
    vim:SendKeyEvent(true, key:lower(), false, game)
    task.wait(0.1)
    vim:SendKeyEvent(false, key:lower(), false, game)
end

-- Find delivery zone
local function findDeliveryPoint()
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("BasePart") or obj:IsA("Model") then
            local name = obj.Name:lower()
            for _, keyword in pairs(deliveryKeywords) do
                if name:find(keyword) then
                    print("[Delivery Found]:", obj:GetFullName())
                    return obj
                end
            end
        end
    end
    return nil
end

-- Teleport to object
local function teleportTo(obj)
    if not obj then return end
    if obj:IsA("Model") and obj.PrimaryPart then
        hrp.CFrame = obj.PrimaryPart.CFrame + Vector3.new(0, 3, 0)
    elseif obj:IsA("BasePart") then
        hrp.CFrame = obj.CFrame + Vector3.new(0, 3, 0)
    end
end

-- Find nearest valid item
local function findNextItem()
    local closest = nil
    local shortest = math.huge

    for _, obj in pairs(itemsFolder:GetChildren()) do
        if (obj:IsA("Model") or obj:IsA("BasePart")) and not pickedItems[obj] then
            local name = obj.Name:lower()
            for _, keyword in pairs(itemKeywords) do
                if name:find(keyword) then
                    local objPos = (obj:IsA("Model") and obj.PrimaryPart and obj.PrimaryPart.Position) or obj.Position
                    local distance = (hrp.Position - objPos).Magnitude
                    if distance < shortest then
                        shortest = distance
                        closest = obj
                    end
                end
            end
        end
    end

    if closest then
        pickedItems[closest] = true
    end
    return closest
end

-- ✅ Rayfield Toggle
Games:CreateToggle({
    Name = " (BETA) Auto Farm Items",
    CurrentValue = false,
    Flag = "AutoFarmToggle",
    Callback = function(runFarm)
        if runFarm then
            task.spawn(function()
                local deliveryPoint = findDeliveryPoint()
                while runFarm do
                    task.wait(1)

                    character = player.Character or player.CharacterAdded:Wait()
                    hrp = character:FindFirstChild("HumanoidRootPart")
                    if not hrp then continue end

                    local targetItem = findNextItem()
                    if targetItem then
                        teleportTo(targetItem)
                        task.wait(0.5)
                        pressKey("e")
                        task.wait(1)

                        if deliveryPoint then
                            teleportTo(deliveryPoint)
                        else
                            hrp.CFrame = CFrame.new(fallbackPosition)
                        end

                        task.wait(0.5)

                        local tool = player.Backpack:FindFirstChildOfClass("Tool") or character:FindFirstChildOfClass("Tool")
                        if tool then
                            pressKey("q")
                        end
                    end
                end
            end)
        end
    end,
})

--HitBox Expander
        
        local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

local localPlayer = Players.LocalPlayer
local targetMinMaxHealth = 200
local scaleFactor = 5 -- How much bigger hitboxes get (5x size)

-- Parts to expand (commonly hitbox parts)
local hitboxParts = {
    "HumanoidRootPart",
    "Head",
    "Torso",
    "UpperTorso",
    "LowerTorso"
}

-- Store original sizes and original CFrames (to restore size and avoid shifting)
local originalSizes = {}
local originalCFrames = {}

local runExpand = false

-- Tween info for smooth scaling
local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

local function expandPart(part)
    if not part then return end
    if originalSizes[part] == nil then
        originalSizes[part] = part.Size
        originalCFrames[part] = part.CFrame
    end

    local newSize = originalSizes[part] * scaleFactor
    -- Calculate size diff and adjust CFrame to keep part centered properly
    local sizeDiff = (newSize - part.Size) * 0.5
    local newCFrame = part.CFrame * CFrame.new(0, sizeDiff.Y, 0)

    local tweenSize = TweenService:Create(part, tweenInfo, {Size = newSize, CFrame = newCFrame})
    tweenSize:Play()
end

local function restorePart(part)
    if not part then return end
    if originalSizes[part] then
        local tweenRestore = TweenService:Create(part, tweenInfo, {Size = originalSizes[part], CFrame = originalCFrames[part]})
        tweenRestore:Play()
        originalSizes[part] = nil
        originalCFrames[part] = nil
    end
end

local function expandCharacter(character)
    for _, partName in ipairs(hitboxParts) do
        local part = character:FindFirstChild(partName)
        if part and part:IsA("BasePart") then
            expandPart(part)
        end
    end
end

local function restoreCharacter(character)
    for _, partName in ipairs(hitboxParts) do
        local part = character:FindFirstChild(partName)
        if part and part:IsA("BasePart") then
            restorePart(part)
        end
    end
end

-- Main loop to apply expansion on valid players
task.spawn(function()
    while true do
        task.wait(1)
        if runExpand then
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= localPlayer and player.Character and player.Character:FindFirstChild("Humanoid") then
                    local humanoid = player.Character.Humanoid
                    if humanoid.MaxHealth >= targetMinMaxHealth then
                        expandCharacter(player.Character)
                    else
                        restoreCharacter(player.Character)
                    end
                end
            end
        else
            -- Restore all if toggle off
            for _, player in pairs(Players:GetPlayers()) do
                if player.Character then
                    restoreCharacter(player.Character)
                end
            end
        end
    end
end)

-- Handle character respawn for each player
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        task.wait(1)
        if runExpand and player ~= localPlayer then
            local humanoid = character:WaitForChild("Humanoid")
            if humanoid.MaxHealth >= targetMinMaxHealth then
                expandCharacter(character)
            end
        end
    end)
end)

Players.PlayerRemoving:Connect(function(player)
    if player.Character then
        restoreCharacter(player.Character)
    end
end)

-- Now plug into Rayfield toggle:

local Toggle = Games:CreateToggle({
    Name = "Easy Hitbox Expander",
    CurrentValue = false,
    Flag = "UniversalHitboxExpander",
    Callback = function(value)
        runExpand = value
        if not value then
            -- Restore immediately on toggle off
            for _, player in pairs(Players:GetPlayers()) do
                if player.Character then
                    restoreCharacter(player.Character)
                end
            end
        end
    end,
})

        local Button = Games:CreateButton({
   Name = "Biast Nexer HUb (Advanced)",
   Callback = function()
   
loadstring(game:HttpGet("https://raw.githubusercontent.com/nexeralt/Loaders/refs/heads/main/BIAST.RBXL"))()
   end,
})

        -- 🟦 RobloxiaUntilDown
elseif placeId == 987654321 or placeId == 80238404781977 then
    local Section = Games:CreateSection("RobloxiaUntilDown")

        local Button = Games:CreateButton({
   Name = "Execute Nexer Hub (OP)",
   Callback = function()
   
loadstring(game:HttpGet("https://raw.githubusercontent.com/Pro666Pro/NexerHub-TR-UD/refs/heads/main/NHTRUD.lua"))()
   end,
})

                -- 🟦 Forsaken
elseif placeId == 18687417158 then
    local Section = Games:CreateSection("Forsaken")

 -- 1. Variables
local generatorEnabled = false
local delayTime = 1 -- seconds between triggers (initial)

-- 2. Toggle
Games:CreateToggle({
    Name = "Auto Generator",
    CurrentValue = false,
    Flag = "AutoGen",
    Callback = function(Value)
        generatorEnabled = Value
    end
})

-- 3. Slider to adjust delay
Games:CreateSlider({
    Name = "Delay Time",
    Range = {0.1, 5},       -- Min and max seconds between triggers
    Increment = 0.1,        -- Step size
    Suffix = "seconds",     -- Show "seconds" after the number
    CurrentValue = delayTime,
    Flag = "DelaySlider",
    Callback = function(Value)
        delayTime = Value
    end
})

-- 4. Loop to fire RemoteEvent
task.spawn(function()
    while task.wait() do
        if generatorEnabled then
            task.wait(delayTime) -- Wait delayTime seconds between fires
            local success, RE = pcall(function()
                return workspace:WaitForChild("Map")
                    :WaitForChild("Ingame")
                    :WaitForChild("Map")
                    :WaitForChild("Generator")
                    :WaitForChild("Remotes")
                    :WaitForChild("RE")
            end)

            if success and RE then
                RE:FireServer()
            end
        else
            task.wait(0.1) -- short pause when disabled
        end
    end
end)

-- 1. Variables
local staminaEnabled = false
local restoreThreshold = 30 -- default threshold

-- 2. Setup Remote/Module
local rs = cloneref(game:GetService("ReplicatedStorage"))
local sprint = rs.Systems.Character.Game.Sprinting
local m = require(sprint)

-- Optional: immediately set full stamina
m.Stamina = 100

-- 3. Toggle for infinite stamina
local Toggle = Games:CreateToggle({
    Name = "Infinite Stamina",
    CurrentValue = false,
    Flag = "InfiniteStamina",
    Callback = function(Value)
        staminaEnabled = Value
    end
})

-- 4. Input Box to set threshold
local Input = Games:CreateInput({
    Name = "Restore Threshold",
    PlaceholderText = "Enter number (default 30)",
    KeyboardType = Enum.KeyboardType.NumberPad,
    RemoveTextAfterFocusLost = false,
    Callback = function(Value)
        local num = tonumber(Value)
        if num then
            restoreThreshold = num
        else
            warn("Invalid number entered!")
        end
    end
})

-- 5. Loop to restore stamina
task.spawn(function()
    while task.wait(0.1) do
        if staminaEnabled and m.Stamina <= restoreThreshold then
            m.Stamina = 100
        end
    end
end)

local Button = Games:CreateButton({
   Name = "Spoof device",
   Callback = function()
  
local UserInputService = game:GetService("UserInputService")
local Network = require(game.ReplicatedStorage.Modules.Network)

local DeviceSpoof = {}
local ForcedDevice = "Console" -- change to "Mobile", "Console" or "PC"

DeviceSpoof.Changed = Instance.new("BindableEvent").Event
DeviceSpoof.Value = ForcedDevice

local function ApplySpoof()
    DeviceSpoof.Value = ForcedDevice
    Network:FireServerConnection("SetDevice", "REMOTE_EVENT", ForcedDevice)
end

ApplySpoof()

UserInputService.LastInputTypeChanged:Connect(ApplySpoof)

while wait() do
    ApplySpoof()
end

return DeviceSpoof
   end,
})

local Button = Games:CreateButton({
   Name = "KryOnion",
   Callback = function()
  
loadstring(game:HttpGet("https://raw.githubusercontent.com/ehrerlikesteto/KryOnionrep/refs/heads/main/OnionIsForsaken"))()
                    Rayfield:Notify({
   Title = "Executed",
   Content = "BE carfully :3",
   Duration = 3.1,
   Image = 4483362458,
})
   end,
})

local Button = Games:CreateButton({
   Name = "Execute VoidWare",
   Callback = function()
  
if not game:IsLoaded() then return end
local CheatEngineMode = false
if (not getgenv) or (getgenv and type(getgenv) ~= "function") then CheatEngineMode = true end
if getgenv and not getgenv().shared then CheatEngineMode = true; getgenv().shared = {}; end
if getgenv and not getgenv().debug then CheatEngineMode = true; getgenv().debug = {traceback = function(string) return string end} end
if getgenv and not getgenv().require then CheatEngineMode = true; end
if getgenv and getgenv().require and type(getgenv().require) ~= "function" then CheatEngineMode = true end
local debugChecks = {
    Type = "table",
    Functions = {
        "getupvalue",
        "getupvalues",
        "getconstants",
        "getproto"
    }
}
local function checkExecutor()
    if identifyexecutor ~= nil and type(identifyexecutor) == "function" then
        local suc, res = pcall(function()
            return identifyexecutor()
        end)   
        --local blacklist = {'appleware', 'cryptic', 'delta', 'wave', 'codex', 'swift', 'solara', 'vega'}
        local blacklist = {'solara', 'cryptic', 'xeno', 'ember', 'ronix'}
        local core_blacklist = {'solara', 'xeno'}
        if suc then
            for i,v in pairs(blacklist) do
                if string.find(string.lower(tostring(res)), v) then CheatEngineMode = true end
            end
            for i,v in pairs(core_blacklist) do
                if string.find(string.lower(tostring(res)), v) then
                    pcall(function()
                        getgenv().queue_on_teleport = function() warn('queue_on_teleport disabled!') end
                    end)
                end
            end
            if string.find(string.lower(tostring(res)), "delta") then
                getgenv().isnetworkowner = function()
                    return true
                end
            end
        end
    end
end
task.spawn(function() pcall(checkExecutor) end)
local function checkDebug()
    if CheatEngineMode then return end
    if not getgenv().debug then 
        CheatEngineMode = true 
    else 
        if type(debug) ~= debugChecks.Type then 
            CheatEngineMode = true
        else 
            for i, v in pairs(debugChecks.Functions) do
                if not debug[v] or (debug[v] and type(debug[v]) ~= "function") then 
                    CheatEngineMode = true 
                else
                    local suc, res = pcall(debug[v]) 
                    if tostring(res) == "Not Implemented" then 
                        CheatEngineMode = true 
                    end
                end
            end
        end
    end
end
--if (not CheatEngineMode) then checkDebug() end
shared.CheatEngineMode = shared.CheatEngineMode or CheatEngineMode

task.spawn(function()
    pcall(function()
        local Services = setmetatable({}, {
            __index = function(self, key)
                local suc, service = pcall(game.GetService, game, key)
                if suc and service then
                    self[key] = service
                    return service
                else
                    warn(`[Services] Warning: "{key}" is not a valid Roblox service.`)
                    return nil
                end
            end
        })

        local Players = Services.Players
        local TextChatService = Services.TextChatService
        local ChatService = Services.ChatService
        repeat
            task.wait()
        until game:IsLoaded() and Players.LocalPlayer ~= nil
        local chatVersion = TextChatService and TextChatService.ChatVersion or Enum.ChatVersion.LegacyChatService
        local TagRegister = shared.TagRegister or {}
        if not shared.CheatEngineMode then
            if chatVersion == Enum.ChatVersion.TextChatService then
                TextChatService.OnIncomingMessage = function(data)
                    TagRegister = shared.TagRegister or {}
                    local properties = Instance.new("TextChatMessageProperties", game:GetService("Workspace"))
                    local TextSource = data.TextSource
                    local PrefixText = data.PrefixText or ""
                    if TextSource then
                        local plr = Players:GetPlayerByUserId(TextSource.UserId)
                        if plr then
                            local prefix = ""
                            if TagRegister[plr] then
                                prefix = prefix .. TagRegister[plr]
                            end
                            if plr:GetAttribute("__OwnsVIPGamepass") and plr:GetAttribute("VIPChatTag") ~= false then
                                prefix = prefix .. "<font color='rgb(255,210,75)'>[VIP]</font> "
                            end
                            local currentLevel = plr:GetAttribute("_CurrentLevel")
                            if currentLevel then
                                prefix = prefix .. string.format("<font color='rgb(173,216,230)'>[</font><font color='rgb(255,255,255)'>%s</font><font color='rgb(173,216,230)'>]</font> ", tostring(currentLevel))
                            end
                            local playerTagValue = plr:FindFirstChild("PlayerTagValue")
                            if playerTagValue and playerTagValue.Value then
                                prefix = prefix .. string.format("<font color='rgb(173,216,230)'>[</font><font color='rgb(255,255,255)'>#%s</font><font color='rgb(173,216,230)'>]</font> ", tostring(playerTagValue.Value))
                            end
                            prefix = prefix .. PrefixText
                            properties.PrefixText = string.format("<font color='rgb(255,255,255)'>%s</font>", prefix)
                        end
                    end
                    return properties
                end
            elseif chatVersion == Enum.ChatVersion.LegacyChatService then
                ChatService:RegisterProcessCommandsFunction("CustomPrefix", function(speakerName, message)
                    TagRegister = shared.TagRegister or {}
                    local plr = Players:FindFirstChild(speakerName)
                    if plr then
                        local prefix = ""
                        if TagRegister[plr] then
                            prefix = prefix .. TagRegister[plr]
                        end
                        if plr:GetAttribute("__OwnsVIPGamepass") and plr:GetAttribute("VIPChatTag") ~= false then
                            prefix = prefix .. "[VIP] "
                        end
                        local currentLevel = plr:GetAttribute("_CurrentLevel")
                        if currentLevel then
                            prefix = prefix .. string.format("[%s] ", tostring(currentLevel))
                        end
                        local playerTagValue = plr:FindFirstChild("PlayerTagValue")
                        if playerTagValue and playerTagValue.Value then
                            prefix = prefix .. string.format("[#%s] ", tostring(playerTagValue.Value))
                        end
                        prefix = prefix .. speakerName
                        return prefix .. " " .. message
                    end
                    return message
                end)
            end
        end
    end)
end)

local commit = shared.CustomCommit and tostring(shared.CustomCommit) or shared.StagingMode and "staging" or "da0aeb15a18d3c8091ff1e3aab25970f40f53465"

loadstring(game:HttpGet("https://raw.githubusercontent.com/VapeVoidware/VW-Add/"..tostring(commit).."/newforsaken.lua", true))()
                    
                    Rayfield:Notify({
   Title = "Executed",
   Content = "BE carfully :3",
   Duration = 3.1,
   Image = 4483362458,
})
   end,
})

 --[[ Hitbox Extender con Toggle, Slider y Hitbox Visible ]]
        local HitboxModule = loadstring(game:HttpGet("https://raw.githubusercontent.com/nexeralt/ForsakenHitboxExtender/refs/heads/main/open%20source.luau"))()
        local RunService = game:GetService("RunService")
        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local extendPower = 2
        local hitboxEnabled = false

        -- Mantener hitbox activo
        RunService.RenderStepped:Connect(function()
            if hitboxEnabled then
                HitboxModule:ExtendHitbox(extendPower, 0.1)
            end
        end)

        -- Toggle para activar/desactivar hitbox
        Games:CreateToggle({
            Name = "Enable Hitbox",
            CurrentValue = false,
            Callback = function(value)
                hitboxEnabled = value
                if not value then
                    HitboxModule:StopExtendingHitbox()
                end
            end
        })

        -- Slider para cambiar potencia
        Games:CreateSlider({
            Name = "Hitbox Power",
            Min = 1,
            Max = 100,
            Default = 2,
            Callback = function(value)
                extendPower = value
            end
        })

local Button = Games:CreateButton({
   Name = "Play Emotes as killer (beta)",
   Callback = function()
   --emote settings 
local Solt1 = "StockDance"
local Solt2 = "Brickbattler"
local Solt3 = "Drumsticks"
local Solt4 = "CaliforniaGirls"
local Solt5 = "Hotdog"
local Solt6 = "Wave"

local function PlayEmote(Emote)
    local args = {
        [1] = "PlayEmote";
        [2] = "Animations";
        [3] = Emote;
    }

    game:GetService("ReplicatedStorage"):WaitForChild("Modules", 9e9):WaitForChild("Network", 9e9):WaitForChild("RemoteEvent", 9e9):FireServer(unpack(args))
end

local function createButton(ButtonName, parent, text, position, color, onClick)
    local button = Instance.new("TextButton")
    button.Name = ButtonName
    button.Size = UDim2.new(0.8, 0, 0.12, 0)
    button.Position = position
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.BackgroundColor3 = color
    button.Font = Enum.Font.GothamBold
    button.TextSize = 16
    button.Parent = parent

    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 5)
    buttonCorner.Parent = button

    button.MouseButton1Click:Connect(onClick)

    return button
end

local function createEmoteButton(onClick)
    local EmoteFrame = game:GetService("Players").LocalPlayer.PlayerGui.TemporaryUI.EmoteMenuHolder.RadialMenu.Attach["6"]
    local button = Instance.new("TextButton", EmoteFrame)
    button.Size = UDim2.new(0.705655515, 1, 0.705655217, 1)
    button.Position = UDim2.new(0.153545171, 0, 0.356493711, 0)
    button.Text = ""
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.BackgroundColor3 = Color3.new(1, 1, 1)
    button.BackgroundTransparency = 1 -- Set transparency to 1 (fully transparent)
    button.Font = Enum.Font.GothamBold
    button.TextSize = 16

    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 5)
    buttonCorner.Parent = button

    button.MouseButton1Down:Connect(onClick)

    return button
end

local Playersgui = game:GetService("Players")
local playergui = Playersgui.LocalPlayer
-- Smaller GUI
local screenGui = Instance.new("ScreenGui", playergui:WaitForChild("PlayerGui"))
local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0, 200, 0, 280)
mainFrame.Position = UDim2.new(0.5, -100, 0.5, -140)
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
mainFrame.BackgroundTransparency = 0.2
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 10)
uiCorner.Parent = mainFrame

-- Close Button
local closeButton = Instance.new("TextButton", mainFrame)
closeButton.Name = "Close"
closeButton.Size = UDim2.new(0, 25, 0, 25)
closeButton.Position = UDim2.new(1, -30, 0, 5)
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
closeButton.Font = Enum.Font.GothamBold
closeButton.TextSize = 16

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 5)
closeCorner.Parent = closeButton

closeButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = false
    mainFrame:Destroy()
    screenGui:Destroy()
end)

-- Create Buttons
createButton("1", mainFrame, "1", UDim2.new(0.1, 0, 0.1, 0), Color3.fromRGB(30, 60, 90), function()
    PlayEmote(Solt1)
end)

createButton("2", mainFrame, "2", UDim2.new(0.1, 0, 0.24, 0), Color3.fromRGB(0, 0, 255), function()
    PlayEmote(Solt2)
end)

createButton("3", mainFrame, "3", UDim2.new(0.1, 0, 0.38, 0), Color3.fromRGB(255, 105, 180), function()
    PlayEmote(Solt3)
end)

createButton("4", mainFrame, "4", UDim2.new(0.1, 0, 0.52, 0), Color3.fromRGB(255, 105, 180), function()
    PlayEmote(Solt4)
end)

createButton("5", mainFrame, "5", UDim2.new(0.1, 0, 0.66, 0), Color3.fromRGB(255, 105, 180), function()
    PlayEmote(Solt5)
end)
-- Last Button
createButton("6", mainFrame, "6", UDim2.new(0.1, 0, 0.80, 0), Color3.fromRGB(255, 50, 50), function()
    PlayEmote(Solt6)
end)

-- Restored "Made by: 118o8" Label
local creditLabel = Instance.new("TextLabel", mainFrame)
creditLabel.Size = UDim2.new(0.8, 0, 0.08, 0)
creditLabel.Position = UDim2.new(0.1, 0, 0.92, 0)
creditLabel.Text = "Emote As Killer"
creditLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
creditLabel.BackgroundTransparency = 1
creditLabel.Font = Enum.Font.GothamBold
creditLabel.TextSize = 14
creditLabel.TextXAlignment = Enum.TextXAlignment.Center

local NotifyModule:NotifyModule = loadstring(game:HttpGet("https://raw.githubusercontent.com/PeaPattern/notif-lib/main/main.lua"))()
NotifyModule:Notify("Haxxed!!11!", 2)
   end,
})

local Button = Games:CreateButton({
   Name = "Fe mafioso old skin (Execute before round starts)",
   Callback = function()
   -- Execute BEFORE a round
loadstring(game:HttpGet("https://raw.githubusercontent.com/UncertainlyRound/ForsakenScripts/refs/heads/main/MafiosoRework/main.lua"))()

Rayfield:Notify({
   Title = "You Are Mine!",
   Content = "Executed just execute before round strats",
   Duration = 2.9,
   Image = 4483362458,
})
                    
   end,
})

local Button = Games:CreateButton({
   Name = "Give deleted emotes (FE)",
   Callback = function()
   --[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local animationId1 = "rbxassetid://74238051754912"
local animationId2 = "rbxassetid://87482480949358"
local animationId3 = "rbxassetid://100986631322204"
local animationId4 = "rbxassetid://107464355830477"
local animationId5 = "rbxassetid://107464355830477"
local audioId1 = "rbxassetid://123236721947419"
local audioId2 = "rbxassetid://132297506693854"
local audioId3 = "rbxassetid://131936418953291"
local audioId4 = "rbxassetid://77601084987544"
local audioId5 = "rbxassetid://120176009143091"

local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0.4, 0, 0.4, 0)
frame.Position = UDim2.new(0.3, 0, 0.3, 0)
frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
frame.BorderColor3 = Color3.fromRGB(255, 0, 0)
frame.Parent = screenGui

local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

local button1 = Instance.new("TextButton")
button1.Size = UDim2.new(0.3, 0, 0.2, 0)
button1.Position = UDim2.new(0.05, 0, 0.3, 0)
button1.Text = "Play: Shucks"
button1.TextColor3 = Color3.fromRGB(255, 255, 255)
button1.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
button1.BorderColor3 = Color3.fromRGB(255, 0, 0)
button1.Parent = frame

local button2 = Instance.new("TextButton")
button2.Size = UDim2.new(0.3, 0, 0.2, 0)
button2.Position = UDim2.new(0.35, 0, 0.3, 0)
button2.Text = "Stop Animations"
button2.TextColor3 = Color3.fromRGB(255, 255, 255)
button2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
button2.BorderColor3 = Color3.fromRGB(255, 0, 0)
button2.Parent = frame

local button3 = Instance.new("TextButton")
button3.Size = UDim2.new(0.3, 0, 0.2, 0)
button3.Position = UDim2.new(0.65, 0, 0.3, 0)
button3.Text = "Play: Subterfuge"
button3.TextColor3 = Color3.fromRGB(255, 255, 255)
button3.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
button3.BorderColor3 = Color3.fromRGB(255, 0, 0)
button3.Parent = frame

local button4 = Instance.new("TextButton")
button4.Size = UDim2.new(0.3, 0, 0.2, 0)
button4.Position = UDim2.new(0.05, 0, 0.55, 0)
button4.Text = "Play: I Miss The Quiet"
button4.TextColor3 = Color3.fromRGB(255, 255, 255)
button4.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
button4.BorderColor3 = Color3.fromRGB(255, 0, 0)
button4.Parent = frame

local button5 = Instance.new("TextButton")
button5.Size = UDim2.new(0.3, 0, 0.2, 0)
button5.Position = UDim2.new(0.35, 0, 0.55, 0)
button5.Text = "Play: Silly Billy"
button5.TextColor3 = Color3.fromRGB(255, 255, 255)
button5.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
button5.BorderColor3 = Color3.fromRGB(255, 0, 0)
button5.Parent = frame

local button6 = Instance.new("TextButton")
button6.Size = UDim2.new(0.3, 0, 0.2, 0)
button6.Position = UDim2.new(0.65, 0, 0.55, 0)
button6.Text = "Play: Silly Billy Thick of It"
button6.TextColor3 = Color3.fromRGB(255, 255, 255)
button6.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
button6.BorderColor3 = Color3.fromRGB(255, 0, 0)
button6.Parent = frame

local creditText = Instance.new("TextLabel")
creditText.Size = UDim2.new(1, 0, 0.2, 0)
creditText.Position = UDim2.new(0, 0, 0, 0)
creditText.Text = "Created by IDislikeShovels"
creditText.TextColor3 = Color3.fromRGB(255, 255, 255)
creditText.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
creditText.BorderColor3 = Color3.fromRGB(255, 0, 0)
creditText.Parent = frame

local animation1 = Instance.new("Animation")
animation1.AnimationId = animationId1

local animation2 = Instance.new("Animation")
animation2.AnimationId = animationId2

local animation3 = Instance.new("Animation")
animation3.AnimationId = animationId3

local animation4 = Instance.new("Animation")
animation4.AnimationId = animationId4

local animation5 = Instance.new("Animation")
animation5.AnimationId = animationId5

local animationTrack1 = humanoid:LoadAnimation(animation1)
local animationTrack2 = humanoid:LoadAnimation(animation2)
local animationTrack3 = humanoid:LoadAnimation(animation3)
local animationTrack4 = humanoid:LoadAnimation(animation4)
local animationTrack5 = humanoid:LoadAnimation(animation5)

local audio1 = Instance.new("Sound")
audio1.SoundId = audioId1
audio1.Parent = character

local audio2 = Instance.new("Sound")
audio2.SoundId = audioId2
audio2.Parent = character

local audio3 = Instance.new("Sound")
audio3.SoundId = audioId3
audio3.Parent = character

local audio4 = Instance.new("Sound")
audio4.SoundId = audioId4
audio4.Parent = character

local audio5 = Instance.new("Sound")
audio5.SoundId = audioId5
audio5.Parent = character

local function playAnimation1()
    animationTrack1:Play()
    audio1:Play()
end

local function stopAnimations()
    animationTrack1:Stop()
    animationTrack2:Stop()
    animationTrack3:Stop()
    animationTrack4:Stop()
    animationTrack5:Stop()
    audio1:Stop()
    audio2:Stop()
    audio3:Stop()
    audio4:Stop()
    audio5:Stop()
end

local function playAnimation2()
    animationTrack2:Play()
    audio2:Play()
end

local function playAnimation3()
    animationTrack3:Play()
    audio3:Play()
end

local function playAnimation4()
    animationTrack4:Play()
    audio4:Play()
end

local function playAnimation5()
    animationTrack5:Play()
    audio5:Play()
end

button1.MouseButton1Click:Connect(playAnimation1)

button2.MouseButton1Click:Connect(stopAnimations)

button3.MouseButton1Click:Connect(playAnimation2)

button4.MouseButton1Click:Connect(playAnimation3)

button5.MouseButton1Click:Connect(playAnimation4)

button6.MouseButton1Click:Connect(playAnimation5)

   end,
})

local Button = Games:CreateButton({
   Name = "XVC OP hub (keyless)"
   Callback = function()
   -- DO NOT USE CODE FROM THIS SCRIPT. PERMISSION IS NOT GRANTED
loadstring(game:HttpGet("https://raw.githubusercontent.com/fuckg1thub/NeptX/refs/heads/main/NeptZ/Forsaken/source.lua"))()
   end,
})

        local Button = Games:CreateButton({
   Name = "ESP",
   Callback = function()
  loadstring(game:HttpGet("https://raw.githubusercontent.com/PlutomasterAccount/Forsaken-ESP/refs/heads/main/Forsaken%20ESP%20Plutomaster.lua"))()

Rayfield:Notify({
   Title = "ESP executed >:D",
   Content = "For killer and survivors",
   Duration = 4,1
   Image = 4483362458,
})
                    
   end,
})

local Button = Games:CreateButton({
   Name = "Farsaken key ---> FartsakenKey911",
   Callback = function()
   
loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/9c9662102ff85aab4429555bd65633b4.lua"))()
   end,
})
        
         -- 🟦 Field Trip Z
elseif placeId == 5096191125 then
    local Section = Games:CreateSection("Field Trip Z")

        local Button = Games:CreateButton({
   Name = "Pepsi Cat Hub",
   Callback = function()
   
loadstring(game:HttpGet("https://pastebin.com/raw/pP0QtSEC"))()

Rayfield:Notify({
   Title = "Executed! >:D",
   Content = "Credits to (IDislikeShovels)",
   Duration = 6.5,
   Image = 4483362458,
})
                    
   end,
})
        
-- 🟥 Unsupported Games
local Section = Games:CreateSection("Unsupported Game")

    Games:CreateLabel("If dont load nothing is because you are on a unsuported game")

    -- Make a list of all supported games dynamically
    local supportedList = {}
    for _, name in pairs(supportedGames) do
        table.insert(supportedList, name)
    end

    -- Show the supported games as text
    Games:CreateParagraph({
        Title = "Supported Games",
        Content = table.concat(supportedList, "\n")
    })
end
